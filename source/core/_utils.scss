////
/// frame-scss | source/core/_utils.scss
/// file version: 1.01.007
///
/// @group Core
////

///
/// Checks if a variable is the correct type. If not, the variable will be
/// overwritten and set to a default value for that type.
///
/// @param {mixed} $var - The variable to check.
///
/// @param {string|list} $type - The type $var should be.
///
/// @param {mixed} $default [null]
///        The default value to return if type-of($var) != $type.
///
/// @return {mixed}
///
@function set($var, $type, $default: null)
{
    $unit: false;
    @if is-list($type)
    {
        $unit: nth($type, 2);
        $type: nth($type, 1);
    }

    @if (type-of($var) != $type and $var != null)
    {
        @if ($default == null)
        {
            @if ($type == number)
            {
                $default: 0;
            }
            @elseif ($type == list)
            {
                $default: ();
            }
        }

        $var: $default;
    }
    @return $var;
}

///
/// Unquotes all strings inside $var if it is a list. Or unquotes $var when it
/// is only a string. Otherwise it just returns the given variable.
///
/// @param {list|string} $var
/// @return {list|string}
///
@function unquote-all($var)
{
    @if is-list($var)
    {
        $list: ();
        @each $value in $var
        {
            $value: unquote-all($value);
            $list:  append($list, $value);
        }

        $var: $list;
    }
    @elseif is-string($var)
    {
        $var: unquote($var);
    }

    @return $var;
}

//------------------------------------------------------------------------------

///
/// Calculates the relative em value compared to the default font-size.
/// Example taken from http://vvv.tobiassjosten.net/css/px-to-em-with-sass/
///
/// @param {number} $px - The pixel value to calculate the em value from.
///
/// @param {number|string} $baseFontSize [default]
///        The font-size to compare the $px value with.
///
/// @return {number}
///
@function em($px, $baseFontSize: 'default')
{
    @if is-string($baseFontSize)
    {
        $baseFontSize: frame-font-size($baseFontSize);
    }

    $baseFontSize: set($baseFontSize, 'number' 'px');
    @return if(($baseFontSize > 0), ($px / $baseFontSize) * 1em, $px);
}

///
/// Calculates the relative rem value. The rem units are always relative to the
/// font-size in the body html element.
///
/// @param {number} $px - The pixel value to calculate the rem value from.
/// @return {number}
///
@function rem($px)
{
    $baseFontSize: frame-font-size();
    $baseFontSize: set($baseFontSize, 'number' 'px');

    @return if(($baseFontSize > 0), ($px / $baseFontSize) * 1rem, $px);
}
