//
// frame-scss | core/_utils.scss
// file version: 1.01.001
////////////////////////////////////////////////////////////////////////////////
//
// Some extra functions to make your development live easier.
//

//------------------------------------------------------------------------------
// Checks if a variable is the correct type. If not, the variable will be
// overwritten and set to a default value for that type.
//
// @param mixed $var The variable to check.
// @param string $type A string with the type $var should be.
// @param list $type A list with the type and unit $var should be.
// @param mixed [$default] The default value to return if typeof($var) != $type.
//
@function set($var, $type, $default: null)
{
    $unit: false;
    @if (type-of($type) == list)
    {
        $unit: nth($type, 2);
        $type: nth($type, 1);
    }

    @if (type-of($var) != $type)
    {
        @if ($default == null)
        {
            @if ($type == number)
            {
                $default: 0;
            }
            @elseif ($type == list)
            {
                $default: ();
            }
        }

        $var: $default;
    }
    @return $var;
}

//------------------------------------------------------------------------------
// Calculates the relative em value compared to the default font-size.
// Example taken from http://vvv.tobiassjosten.net/css/px-to-em-with-sass/
//
// @param number $px The pixel value to calculate the em value from.
// @param number|string $baseFontSize The font-size to compare the $px value with.
// @return number(em)
//
@function em($px, $baseFontSize: default)
{
    @if (type-of($baseFontSize) == string)
    {
        $baseFontSize: frame-font-size($baseFontSize);
    }

    $baseFontSize: set($baseFontSize, number px);
    @return if(($baseFontSize > 0), ($px / $baseFontSize) * 1em, $px);
}

//------------------------------------------------------------------------------
// Calculates the relative rem value. The rem units are always relative to the
// font-size in the body html element.
//
// @param number $px The pixel value to calculate the rem value from.
// @return number (rem)
//
@function rem($px)
{
    $baseFontSize: frame-font-size();
    $baseFontSize: set($baseFontSize, number px);

    @return if(($baseFontSize > 0), ($px / $baseFontSize) * 1rem, $px);
}
