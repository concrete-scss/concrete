////
/// frame-scss | components/_grid.scss
/// file version: 0.00.003
////

@function frame-grid-columns($settings)
{
    $return:         ();
    $breakpointKeys: map-keys($frame-breakpoints);

    @each $entry in $settings
    {
        $name:        nth($entry, 1);
        $width:       nth($entry, 2);
        $breakpoints: ();

        @if (length($entry) >= 3)
        {
            $breakpoints: nth($settings, 3);
            @if is-list($breakpoints)
            {
                // xl l m s xs
               // $x:debug('blaat', $breakpoints);
            }
        }

        $return: map-append($return, $name,
        (
            'name':        $name,
            'width':       $width,
            'breakpoints': if(is-list($breakpoints, 1), $breakpoints, false)
        ));
    }

    @return $return;
}

///
/// @param {string} $type
///        Available grid types are `block`, `flex` and `table`.
///
/// @param {string|map} $columns [default]
///        A map with grid columns. When `default`, the grid columns in
///        $frame-grid-columns is used.
///
/// @todo The flex and table grids are still work in progress.
///
@mixin frame-grid-create($type, $columns: 'default')
{
    @if ($columns == 'default')
    {
        $columns: $frame-grid-columns;
    }

    @if ($type == 'block')
    {
        @include  _frame-display-blockgrid($columns);
    }
    /*@elseif ($type == 'flex')
    {
        $columns: _frame-prepare-flexgrid($columns);
        @include  _frame-display-flexgrid($columns);
    }*/
    /*@elseif ($type == 'table')
    {
        $columns: _frame-prepare-tablegrid($columns);
        @include  _frame-display-tablegrid($columns);
    }*/
    @else
    {
        @return warn('frame-grid',
                     'Unable to create grid, unknown type `#{$type}`!');
    }
}

///
/// @access private
/// @param {map} $columns
///
@mixin _frame-display-blockgrid($columns)
{
    %frame-blockgrid-cell
    {
        display: block;
        float:   left;
    }

    &.gr,
    & .gr
    {
        display: block;
        @include apply-clearfix();

        @each $name, $column in $columns
        {
            > .gc-#{$name}
            {
                @extend %frame-blockgrid-cell;
                width: map-get($column, width);
            }
        }

        @each $breakpoint in map-keys($frame-breakpoints)
        {
            @include add-breakpoint($breakpoint, max)
            {
                @each $name, $column in $columns
                {
                    > .gc-#{$breakpoint}-#{$name}
                    {
                        width: map-get($column, width);
                    }
                }
            }
        }
    }
}

