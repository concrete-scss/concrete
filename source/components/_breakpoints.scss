//
// frame-scss | components/_breakpoints.scss
// file version: 1.01.001
////////////////////////////////////////////////////////////////////////////////
//
// Breakpoint and media query related mixins.
//

// screen and (min-width: $min) and (max-width: $max)
@mixin add-breakpoint($breakpoint, $type: both, $scrollbarBuffer: true)
{
    $mediaQuery: ();

    // enkele breakpoint key (xl|l), haal corresponderende map op
    @if (type-of($breakpoint) == string)
    {
        $breakpoint: frame-breakpoint($breakpoint);
    }
    // custom breakpoint map (min: #, max: #)
    @if (type-of($breakpoint) == map)
    {
        $mediaQuery: _media-query-add-map($mediaQuery,
                                          $breakpoint,
                                          $type,
                                          $scrollbarBuffer);
    }
    // meerder breakpoints in list
    @elseif (type-of($breakpoint) == list)
    {
        $breakpoints: $breakpoint;
        @each $breakpoint in $breakpoints
        {
            @if (type-of($breakpoint) == string)
            {
                $breakpoint: frame-breakpoint($breakpoint);
            }
            @if (type-of($breakpoint) == map)
            {
                $mediaQuery: _media-query-add-map($mediaQuery,
                                                  $breakpoint,
                                                  $type,
                                                  $scrollbarBuffer);
            }
        }
    }

    @media #{$mediaQuery}
    {
        @content;
    }
}

//------------------------------------------------------------------------------
// @param bool|number(px|em|rem) $scrollbarBuffer
//
@mixin frame-display-wrapper-breakpoints($scrollbarBuffer: true)
{
    @each $breakpoint, $values in $frame-breakpoints
    {
        @if ($breakpoint != xl)
        {
            @include add-breakpoint($breakpoint, both, $scrollbarBuffer)
            {
                $width: frame-breakpoint($breakpoint, min);
                //$width: rem($width);

                max-width: $width;
            }
        }
    }
}

////////////////////////////////////////////////////////////////////////////////

//------------------------------------------------------------------------------
// Private functions
//------------------------------------------------------------------------------

@function _media-query-add($mq, $min, $max, $scrollbarBuffer)
{
    $hasMin: ($min != null and $min != false);
    $hasMax: ($max != null and $max != false);

    @if ($scrollbarBuffer != false)
    {
        @if ($scrollbarBuffer == true)
        {
            $scrollbarBuffer: 20px;
        }

        @if $hasMin
        {
            $min: ($min + $scrollbarBuffer);
        }
        @if $hasMax
        {
            $max: ($max + $scrollbarBuffer);
        }
    }

    @if ($hasMin or $hasMax)
    {
        @if ($hasMin and $hasMax)
        {
            $condition: 'screen and (min-width: #{$min}) and (max-width: #{$max})';
        }
        @elseif $hasMin
        {
            $condition: 'screen and (min-width: #{$min})';
        }
        @elseif $hasMax
        {
            $condition: 'screen and (max-width: #{$max})';
        }

        $mq: append($mq, unquote($condition), comma);
    }
    @return $mq;
}

@function _media-query-add-map($mq, $breakpoint, $type, $scrollbarBuffer)
{
    $min: false;
    $max: false;

    @if (map-has-key($breakpoint, min))
    {
        $min: map-get($breakpoint, min);
    }
    @if (map-has-key($breakpoint, max))
    {
        $max: map-get($breakpoint, max);
    }

    @return _media-query-add($mq, $min, $max, $scrollbarBuffer);
}
