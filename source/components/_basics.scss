////
/// frame-scss | source/components/_basics.scss
/// file version: 0.00.004
///
/// @group private
////

///
/// This 'private' function will display all headings, wich are defined in the
/// `$frame-font-sizes` setting, in partials/_default.scss.
///
/// @access private
///
@mixin _frame-display-headings()
{
    $fontSizes: ();

    // loop through h1-h6
    @for $i from 1 through 6
    {
        $heading: unquote('h'+ $i);

        // check if the heading is set in the settings file
        @if map-has-key($frame-font-sizes, $heading)
        {
            // group the elements by font-size
            $fontSize:  frame-font-size($heading);
            $fontSizes: map-append($fontSizes, $fontSize, $heading);
        }
    }

    // loop through all grouped headings
    @each $fontSize, $headings in $fontSizes
    {
        #{$headings}
        {
            font-size: rem($fontSize);
        }

        // by extending the heading elements, any custom rules to h1-h6 will
        // also be available to the .h1-.h6 classes
        @each $heading in $headings
        {
            .#{$heading}
            {
                @extend #{$heading};
            }
        }
    }
}

///
/// @access private
///
@mixin _frame-display-container()
{
    $breakpoint:   nth-first($_frame-breakpoints);
    $defaultWidth: frame-container-width($breakpoint);

    $maxWidth: frame-breakpoint($breakpoint, 'max');
    @if not $maxWidth
    {
        $maxWidth: frame-breakpoint($breakpoint, 'min');
    }

    width:     $defaultWidth;
    max-width: $maxWidth;

    $widths: ();
    @for $i from 2 through length($_frame-breakpoints)
    {
        $breakpoint: nth($_frame-breakpoints, $i);
        $width:      frame-container-width($breakpoint);

        @if ($width != $defaultWidth)
        {
            $widths: map-append($widths, $width, $breakpoint);
        }
    }

    @each $width, $breakpoints in $widths
    {
        @include add-breakpoint($breakpoints, 'max')
        {
            width: $width;
        }
    }
}
