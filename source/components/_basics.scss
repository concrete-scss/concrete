////
/// concrete | source/components/_basics.scss
/// file version: 0.00.005
///
/// @group private
////

///
/// This 'private' function will display all headings, wich are defined in the
/// `$concrete-font-sizes` setting, in partials/_default.scss.
///
/// @access private
///
@mixin _concrete-display-headings()
{
    $fontSizes: ();

    // loop through h1-h6
    @for $i from 1 through 6
    {
        $heading: unquote('h'+ $i);

        // check if the heading is set in the settings file
        @if map-has-key($concrete-font-sizes, $heading)
        {
            // group the elements by font-size
            $fontSize:  font-size($heading);
            $fontSizes: map-append($fontSizes, $fontSize, $heading);
        }
    }

    // loop through all grouped headings
    @each $fontSize, $headings in $fontSizes
    {
        #{$headings}
        {
            font-size: rem($fontSize);
        }

        // by extending the heading elements, any custom rules to h1-h6 will
        // also be available to the .h1-.h6 classes
        @each $heading in $headings
        {
            .#{$heading}
            {
                @extend #{$heading};
            }
        }
    }
}

///
/// @access private
///
@mixin _concrete-display-container()
{
    @if (length($_concrete-breakpoints) > 0)
    {
        $breakpoint:   nth-first($_concrete-breakpoints);
        $defaultWidth: container-width($breakpoint);

        $maxWidth: breakpoint($breakpoint, 'max');
        @if not $maxWidth
        {
            $maxWidth: breakpoint($breakpoint, 'min');
        }

        width:     $defaultWidth;
        max-width: $maxWidth;

        $widths: ();
        @for $i from 2 through length($_concrete-breakpoints)
        {
            $breakpoint: nth($_concrete-breakpoints, $i);
            $width:      container-width($breakpoint);

            @if ($width != $defaultWidth)
            {
                $widths: map-append($widths, $width, $breakpoint);
            }
        }

        @each $width, $breakpoints in $widths
        {
            @include add-breakpoint($breakpoints, 'max')
            {
                width: $width;
            }
        }
    }
}
