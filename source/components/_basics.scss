////
/// frame-scss | components/_basics.scss
/// file version: 0.00.003
///
/// @group private
////

///
/// This 'private' function will display all headings, wich are defined in the
/// $frame-font-sizes setting, in partials/_default.scss.
///
/// @access private
///
@mixin _frame-display-headings()
{
    $fontSizes: ();

    // loop through h1-h6
    @for $i from 1 through 6
    {
        $heading: unquote('h'+ $i);

        // check if the heading is set in the settings file
        @if map-has-key($frame-font-sizes, $heading)
        {
            // group the elements by font-size
            $fontSize:  frame-font-size($heading);
            $fontSizes: map-append($fontSizes, $fontSize, $heading);
        }
    }

    // loop through all grouped headings
    @each $fontSize, $headings in $fontSizes
    {
        #{$headings}
        {
            font-size: rem($fontSize);
        }

        // by extending the heading elements, any custom rules to h1-h6 will
        // also be available to the .h1-.h6 classes
        @each $heading in $headings
        {
            .#{$heading}
            {
                @extend #{$heading};
            }
        }
    }
}

///
/// @access private
/// @todo WIP
///
@mixin _frame-display-wrapper()
{
    $maxWidth: frame-breakpoint('xl', 'max');
    @if ($maxWidth == false)
    {
        $maxWidth: frame-breakpoint('xl', 'min');
    }

    width:     frame-grid-width();
    max-width: $maxWidth;

    /*@each $breakpoint, $breakpointValues in $frame-breakpoints
    {
        $bpMin:   map-get($breakpointValues, min);
        $bpMax:   map-get($breakpointValues, max);
        $bpWidth: frame-grid-width($breakpoint);

        @if ($min == false)
        {
            $min: $bpMin;
            $max: $bpMax;
        }

        @if ($bpWidth != $width)
        {
            @include add-custom-breakpoint($min, $max)
            {
                width: $width;
            }
        }
    }*/
}
