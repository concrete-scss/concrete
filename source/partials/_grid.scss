//
// frame-scss | partials/_grid.scss
// file version: 0.01.001
//
// Work in progress!
//

.gp
{
    &,
    &-t,
    &-b,
    &-tb,
    &-l,
    &-r,
    &-lr
    {
        width: $gridWidth;
    }

    &,
    &-t,
    &-tb
    {
        padding-top: ($gridPadding * 2);
    }

    &,
    &-b,
    &-tb
    {
        padding-bottom: ($gridPadding * 2);
    }

    &,
    &-l,
    &-lr
    {
        padding-left: ($gridPadding * 2);
    }

    &,
    &-r,
    &-lr
    {
        padding-right: ($gridPadding * 2);
    }
}

/*.flexgrid
{
    display: flex;
    display: -ms-flexbox;
    display: -webkit-flex;

    @include flex-flow(row wrap);

    @include flexgrid-columns($gridColumns);
}*/

.blockgrid
{
    @include clearfix;

    > [class*='gc-']
    {
        display: block;
        float: left;
    }

    @include blockgrid-columns($gridColumns);
}

//.flexgrid,
.blockgrid
{
    width: $gridWidth;
    padding-left: $gridPadding * 2;
    padding-right: $gridPadding * 2;

    > [class*='gc-']
    {
        position: relative;
        min-height: 1px;
        height: 100%;
    }

    // padding in cell aan alle kanten
    &.gp,
    &.gp > [class*='gc-']
    {
        padding: $gridPadding;
    }

    // padding in cell aan boven- en onderkant
    &.gp-tb,
    &.gp-tb > [class*='gc-']
    {
        padding: $gridPadding 0;
    }

    // padding in cell aan bovenkant
    &.gp-t
    {
        padding-top: 0;

        > [class*='gc-']
        {
            padding-top: $gridPadding * 2;
        }
    }

    // padding in cell aan onderkant
    &.gp-b
    {
        padding-top: 0;

        > [class*='gc-']
        {
            padding-bottom: $gridPadding * 2;
        }
    }

    // padding in cell aan linker- en rechterkant
    &.gp-lr,
    &.gp-lr > [class*='gc-']
    {
        padding: 0 $gridPadding;
    }

    // padding in cell alleen links
    &.gp-l
    {
        padding-left: 0;

        > [class*='gc-']
        {
            padding-left: $gridPadding * 2;
        }
    }

    // padding in cell alleen rechts
    &.gp-r
    {
        padding-right: 0;

        > [class*='gc-']
        {
            padding-right: $gridPadding * 2;
        }
    }
}

//----------------------------------------------------------------------------------------------------------------------

@each $breakpoint, $breakpointValues in $frame-breakpoints
{
    // xl breakpoint overslaan, die is altijd gelijk aan default
    @if($breakpoint != default and $breakpoint != xl)
    {
        @include use-breakpoint($breakpoint, max)
        {
            /*.flexgrid
            {
                @include flexgrid-columns-breakpoint($gridColumns, $breakpoint);
            }*/

            .blockgrid
            {
                @include blockgrid-columns-breakpoint($gridColumns, $breakpoint);
            }
        }
    }
}
