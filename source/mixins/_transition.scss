//
// frame-scss | mixins/_transition.scss
// file version: 1.00.004
//

//-----------------------------------------------------------------------------
//
@mixin transition($property, $duration: default,
                  $easing: default, $delay: default)
{
    // retrieve default values where necessary
    @if ($duration == default)
    {
        $duration: frame-transition(default, duration);
    }
    @if ($easing == default)
    {
        $easing: frame-transition(default, easing);
    }
    @if ($delay == default)
    {
        $delay: frame-transition(default, delay);
    }

    $hasPropertyList: (type-of($property) == list);
    $hasDurationList: (type-of($duration) == list);

    @if ($hasPropertyList and $hasDurationList)
    {
        $propertyListLength: length($property);
        $durationListLength: length($duration);

        @if ($propertyListLength == $durationListLength)
        {
            $transitions: ();
            @for $i from 1 through $propertyListLength
            {
                $p: nth($property, $i);
                $d: nth($duration, $i);

                $transition:  $p $d $easing $delay;
                $transitions: append($transitions, $transition, comma);
            }

            -webkit-transition: $transitions;
               -moz-transition: $transitions;
                 -o-transition: $transitions;
                    transition: $transitions;
        }
        @else
        {
            @include transition-property($property);
            @include transition-duration($duration);
            @include transition-timing-function($easing);
            @include transition-delay($delay);
        }
    }
    @else
    {
        @if $hasPropertyList
        {
            @include transition-property($property);
            $property: null;
        }

        -webkit-transition: $property $duration $easing $delay;
           -moz-transition: $property $duration $easing $delay;
             -o-transition: $property $duration $easing $delay;
                transition: $property $duration $easing $delay;
    }
}

//-----------------------------------------------------------------------------
//
@mixin transition-delay($value: default)
{
    @if ($value == default)
    {
        $value: frame-transition(default, delay);
    }

    -webkit-transition-delay: $value;
       -moz-transition-delay: $value;
         -o-transition-delay: $value;
            transition-delay: $value;
}

//-----------------------------------------------------------------------------
//
@mixin transition-duration($value: default)
{
    @if ($value == default)
    {
        $value: frame-transition(default, duration);
    }

    -webkit-transition-duration: $value;
       -moz-transition-duration: $value;
         -o-transition-duration: $value;
            transition-duration: $value;
}

//-----------------------------------------------------------------------------
//
@mixin transition-property($value...)
{
    -webkit-transition-property: $value;
       -moz-transition-property: $value;
         -o-transition-property: $value;
            transition-property: $value;
}

//-----------------------------------------------------------------------------
//
@mixin transition-timing-function($value: default)
{
    @if ($value == default)
    {
        $value: frame-transition(default, easing);
    }

    -webkit-transition-timing-function: $value;
       -moz-transition-timing-function: $value;
         -o-transition-timing-function: $value;
            transition-timing-function: $value;
}
