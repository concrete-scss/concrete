///
/// @access private
/// @group private
///
/// @param {list|map} $items
/// @param {bool|string} $indentLevel [false]
/// @return {string}
///
@function _dump--items($items, $inspect: true, $indentLevel: '')
{
    $result:   '';
    $indent:   '  ';
    $isMap:    is-map($items);

    $length: length($items);
    @if ($length > 0)
    {
        @if is-true($inspect)
        {
            @if $isMap
            {
                @each $key, $value in $items
                {
                    $value: _dump--item('`' + $key + '`', $value,
                                           $indentLevel + $indent);

                    $result: $result + $value;
                }
            }
            @else
            {
                @for $i from 1 through $length
                {
                    $value: _dump--item($i, nth($items, $i),
                                           $indentLevel + $indent);

                    $result: $result + $value;
                }
            }

            $tagOpen:  newline() + $indentLevel + '(';
            $tagClose: newline() + $indentLevel + ')';
            $result:   $tagOpen + $result + $tagClose;
        }
        @else
        {
            $inspect: inspect($items);
            $result:  ' (' + $inspect + ')';
        }
    }
    @else
    {
        $result: ' ( )';
    }

    $properties: ( type-of($items), $length );
    @if not $isMap
    {
        $properties: append($properties, list-separator($items));
    }

    @return '(' + implode($properties, '|') + ')' + $result;
}
