////
/// concrete | src/components/_container.scss
///
/// @group container
////

@mixin container($containerName: 'default')
{
    // $containerName: _container-parse-name($containerName);
    $container:     get-container($containerName);

    @if not is-false($container)
    {
        $containerName: '_concrete-container-' + $containerName;

        @include dynamic-placeholder($containerName, true)
        {
            @each $property, $value in $container
            {
                #{$property}: #{$value};
            }
        }
    }
}

// -----------------------------------------------------------------------------
// Setter functions and mixins
// -----------------------------------------------------------------------------

@mixin set-container($container, $properties)
{
    // $container: _container-parse-name($container);
    @include storage-set('container', $container, $properties);
}

@function get-container($container)
{
    // $container: _container-parse-name($container);
    @return storage-get('container', $container);
}

@function get-container-property($container, $property: null)
{
    @if is-null($property)
    {
        $property:  $container;
        $container: null;
    }

    // $container: _container-parse-name($container);
    @return storage-get('container', $container, $property);
}

// -----------------------------------------------------------------------------
// Private functions and mixins
// -----------------------------------------------------------------------------

// @function _container-parse-name($name)
// {
//     $breakpoint: 'default';

//     @if is-null($name)
//     {
//         $name: 'default';
//     }
//     @elseif is-list($name)
//     {
//         $breakpoint: nth($name, 2);
//         $name:       nth($name, 1);
//     }

//     @return ($name $breakpoint);
// }
