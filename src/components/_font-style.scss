////
/// concrete | src/components/_font-style.scss
///
/// @group font-style
////

///
/// Displays all properties from the given font-style.
///
@mixin font-style($name, $properties: 'all')
{
    $fontStyle: get-font-style($name);
    @each $property, $value in $fontStyle
    {
        $func: 'get-'+ $property;
        @if (function-exists($func))
        {
            $value: call($func, $name);
        }

        #{$property}: #{$value};
    }
}

// -----------------------------------------------------------------------------
// Setter functions and mixins
// -----------------------------------------------------------------------------

@function set-font-style($name, $options)
{
    $concrete-font-styles: map-append($concrete-font-styles,
                                      $name,
                                      $options) !global;

    @return $concrete-font-styles;
}

@mixin set-font-style($name, $options)
{
    $x: set-font-style($name, $options);
}

// -----------------------------------------------------------------------------
// Getter functions
// -----------------------------------------------------------------------------

///
/// Returns a font-style list from the `$concrete-font-styles` setting.
///
/// @param {string} $name [default] The name of the font-style.
/// @return {map}
///
@function get-font-style($name: 'default')
{
    @if map-has-key($concrete-font-styles, $name)
    {
        @return map-get($concrete-font-styles, $name);
    }

    @return warn('get-font-style', 'Unknown font-style `#{$name}`!');
}

///
/// Returns a font-style property from a font-style in the
/// `$concrete-font-styles` setting.
///
/// @param {string} $name - The name of the font-style.
/// @param {string} $property - The name of the property of the font-style.
/// @param {boolean} $quote - Quote the returned value?.
///
/// @return {mixed}
///
@function get-font-style-property($name, $property, $quote: false)
{
    @return _get-font-style-property($name,
                                     $property,
                                     $quote,
                                     'get-font-style-property');
}

///
/// Returns the font-family property from a font-style in the
/// `$concrete-font-styles` setting.
///
/// @param {string} $name [default] - The name of the font-style.
/// @return {string}
///
@function get-font-family($name: 'default')
{
    @return _get-font-style-property($name, 'font-family', true);
}

///
/// Returns the font-size property from a font-style in the
/// `$concrete-font-styles` setting.
///
/// @param {string} $name [default] - The name of the font-style.
/// @return {string}
///
@function get-font-size($name: 'default')
{
    @return _get-font-style-property($name, 'font-size');
}

///
/// Returns the font-weight property from a font-style in the
/// `$concrete-font-styles` setting.
///
/// @param {string} $name [default] - The name of the font-style.
/// @return {string}
///
@function get-font-weight($name: 'default')
{
    @return _get-font-style-property($name, 'font-weight');
}

///
/// Returns the line-height property from a font-style in the
/// `$concrete-font-styles` setting.
///
/// @param {string} $name [default] - The name of the font-style.
/// @return {string}
///
@function get-line-height($name: 'default')
{
    @return _get-font-style-property($name, 'line-height');
}

// -----------------------------------------------------------------------------
// Private functions
// -----------------------------------------------------------------------------

///
/// Returns a font-style property from a font-style in the
/// `$concrete-font-styles` setting.
///
/// @access private
///
/// @param {string} $name - The name of the font-style.
/// @param {string} $property - The name of the property of the font-style.
/// @param {boolean} $quote [false] - Quote the returned value?
/// @param {string} $errorFnName [''] - Name of the function that is used.
/// @return {mixed}
///
@function _get-font-style-property($name,
                                   $property,
                                   $quote: false,
                                   $errorFnName: '')
{
    @if is-empty($errorFnName)
    {
        $errorFnName: 'get-'+ $property;
    }

    @if map-has-key($concrete-font-styles, $name)
    {
        $fontStyle: map-get($concrete-font-styles, $name);

        @if (is-map($fontStyle) and map-has-key($fontStyle, $property))
        {
            $result: map-get($fontStyle, $property);

            @if is-string($result)
            {
                $result: if($quote == true, quote($result), unquote($result));
            }

            @return $result;
        }

        @return warn($errorFnName,
            'Property `#{$property}` not set for font-style `#{$name}` !');
    }

    @return warn($errorFnName, 'Unknown font-style `#{$name}`!');
}

// -----------------------------------------------------------------------------
// Global variables and settings
// -----------------------------------------------------------------------------
@if not global-variable-exists('concrete-font-styles')
{
    $concrete-font-styles: () !global;
}
