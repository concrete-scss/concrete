////
/// concrete | src/core/_types.scss
///
/// @group core
////

@import 'types/boolean';
@import 'types/color';
@import 'types/list';
@import 'types/map';
@import 'types/number';
@import 'types/string';

// -----------------------------------------------------------------------------

///
/// Returns `true` if `$var` is equal to null.
///
/// @param {mixed} $var
/// @return {bool}
///
@function is-null($var)
{
    @return (type-of($var) == 'null');
}

///
/// Returns `true` if `$var` is either a number, string, color, boolean or null.
///
/// @param {mixed} $var
/// @return {bool}
///
@function is-scalar($var)
{
    @return is-number($var) or
            is-string($var) or
            is-color($var) or
            is-bool($var) or
            is-null($var);
}

///
/// Returns `true` if `$var` is empty.
///
/// @param {mixed} $var
/// @return {bool}
///
@function is-empty($var)
{
    @return is-null($var) or
            is-empty-string($var) or
            is-list($var, 1) or
            is-map($var, 1);
}

// -----------------------------------------------------------------------------

///
/// Checks if the given vars are of the same type.
///
/// @param {mixed} $var1 - A variable to check.
/// @param {mixed} $var2 - A second variable to check.
/// @return {boolean}
///
@function equal-types($var1, $var2)
{
    @return (type-of($var1) == type-of($var2));
}

///
/// Checks if a variable is the correct type. If not, the variable will be
/// overwritten and set to a default value for that type.
///
/// @param {mixed} $var - The variable to check.
/// @param {string|list} $type - The type $var should be.
/// @param {mixed} $default [null] - The default value to return if
///         (type-of($var) != $type).
/// @return {mixed}
///
@function set-type($var, $type, $default: null)
{
    // type alias
    @if ($type == 'boolean')
    {
        $type: 'bool';
    }

    $varType:         type-of($var);
    $isIncorrectType: ($varType != $type);

    // special check for arglists wich are basically lists
    @if ($isIncorrectType and
         $type == 'list' and
         is-list($var))
    {
        $isIncorrectType: false;
    }

    @if $isIncorrectType
    {
        @if is-null($default)
        {
            @if ($type == 'number')
            {
                $default: 0;
            }
            @elseif ($type == 'list')
            {
                $default: ();
            }
        }

        $var: $default;
    }

    @return $var;
}
